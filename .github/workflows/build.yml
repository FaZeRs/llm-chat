name: Building(CMake)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  linux-build:
    name: ${{ matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Install dependencies
        run: sudo apt-get install -y catch2 libcurl4-openssl-dev libxcb-xinerama0 ninja-build ccache libxkbcommon-dev libxkbcommon-x11-dev

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.0'
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          install-deps: 'true'
          cache: 'true'
          tools: 'tools_ifw'
          aqtversion: '==3.1.*'
          py7zrversion: '==0.20.*'

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake -G Ninja $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSENTRY_BACKEND=breakpad -DSENTRY_INTEGRATION_QT=ON -DCPACK_IFW_ROOT=$IQTA_TOOLS/QtInstallerFramework/4.5/bin

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --parallel $(nproc) --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: ctest -C $BUILD_TYPE --output-on-failure --output-junit test-results.xml

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test-results
          path: build/test-results.xml

      - name: Package
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --target package

      - name: Upload Artifact to Github
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.package.outputs.artifact }}
          path: build/RoomSketcher-*-linux.tar.gz
          retention-days: 2

  windows-build:
    name: ${{ matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.0'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw'
          install-deps: 'true'
          cache: 'true'
          tools: 'tools_ifw tools_mingw90'
          aqtversion: '==3.1.*'
          py7zrversion: '==0.20.*'

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake -G Ninja $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSENTRY_BACKEND=breakpad -DSENTRY_INTEGRATION_QT=ON -DCPACK_IFW_ROOT=$IQTA_TOOLS/QtInstallerFramework/4.5/bin

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --parallel $(nproc) --config $BUILD_TYPE

      - name: Test
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: ctest -C $BUILD_TYPE